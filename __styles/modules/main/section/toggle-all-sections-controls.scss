@use "../../root/layout/breakpoints.scss" as *;

/// Styles for the toggle-all-sections controls
/// @group main
/// @require {Length} $bp2 - Second breakpoint value
/// @see {mixin} section - General styles for sections
/// @see {mixin} section-toggleable - Styles for sections that can be toggled
/// @see {mixin} main - General styles for the main section

@mixin toggle-all-section-controls {
  .toggleAllControls {
    /* The container */
    display: flex;
    flex-flow: row wrap; // Wrap at smallest viewport widths
    @media (min-width: $bp2) {
      flex-wrap: nowrap; // Not at larger ones
    }
    justify-content: center;
    align-items: stretch;
    width: 100%;
    max-width: calc(80ch - 2 * var(--spacing));
    gap: var(--spacing);
    --dur: 0.5s;

    /* The individual buttons */
    a {
      /* Layout */
      position: relative;
      display: flex;
      justify-content: center;
      align-items: center;
      flex: 1 1 100%;

      /* Spacing */
      padding: 0.25em 2em;

      /* Borders */
      border: 1pt solid var(--gloss);
      border-radius: calc(0.5 * var(--rounding));

      /* Background */
      background: var(--white);
      opacity: 0.75;

      /* Typography */
      font-size: 0.75rem;
      text-decoration: none;
      text-transform: uppercase;
      text-align: center;
      letter-spacing: 0.125ch;

      /* Toggle direction indicators */
      &.expandAll,
      &.collapseAll {
        /* Same basics for both expand and collapse */
        &::before,
        &::after {
          content: "▼";
          opacity: 0.25;
          position: absolute;
          top: 0;
          bottom: 0;
          display: flex;
          align-items: center;
        }
        &::before {
          left: 0.5em;
        }
        &::after {
          right: 0.5em;
        }
      }
      &.collapseAll {
        /* Collapse has them pointing inward */
        &::before {
          transform: rotate(-90deg);
        }
        &::after {
          transform: rotate(90deg);
        }
        &:hover::before {
          text-shadow: -1pt 1pt 1pt var(--shade);
        }
      }

      &.anchorTarget {
        /* Anchor target gets its own unique styling */
        border-left-width: 0;
        border-right-width: 0;
        border-radius: 0;

        order: 3; // Last in order at smallest viewport widths
        @media (min-width: $bp2) {
          order: unset; // Naturally in the middle at larger ones
        }

        /* Different indicators to illustrate its unique function */
        &::before,
        &::after {
          content: "↴";
        }
        &::before {
          margin-right: 1ch;
          transform: scaleY(-1) rotate(-90deg);
        }
        &::after {
          margin-left: 1ch;
        }

        /* Hide indicators when disabled */
        &.disabled {
          opacity: 0.125;
          &::before,
          &::after {
            display: none;
          }
        }
      }

      /* All disabled buttons fade out and don't react to pointer */
      &.disabled {
        pointer-events: none;
        opacity: 0.25;
        display: none; // Hide completely at smallest viewport widths
        @media (min-width: $bp2) {
          display: block; // But not at larger ones
        }
      }
    }
    &:last-of-type .anchorTarget {
      order: -1; // At the bottom, first in order at smallest viewport widths
      @media (min-width: $bp2) {
        order: unset; // Still naturally in the middle at larger ones
      }
      /* Indicators get spun around to point up instead of down */
      &::before {
        transform: rotate(-90deg);
      }
      &::after {
        transform: scaleY(-1);
      }
      &:hover::before {
        text-shadow: -1pt 1pt 1pt var(--shade);
      }
      &:hover::after {
        text-shadow: 1pt -1pt 1pt var(--shade);
      }
    }

    /* Don't show any of this in print */
    @media only print {
      display: none;
    }
  }
}
