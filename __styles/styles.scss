@use "sass:math";
@import url("https://fonts.googleapis.com/css2?family=Itim&family=Nunito&family=Princess+Sofia&display=swap");

:root {
  // Spacing and rounding

  --spaceFactor: 1; // Multiple of font size
  --roundFactor: 1; // Multiple of font size
  --spacing: var(--spacingRel); // Default to local (Rel) or root (Abs) font
  --rounding: var(--roundingRel); // Default to local (Rel) or root (Abs) font
  --spacingRel: clamp(0.5rem, calc(100vw / 60), calc(var(--spaceFactor) * 1em));
  --spacingAbs: clamp(
    0.5rem,
    calc(100vw / 60),
    calc(var(--spaceFactor) * 1rem)
  );
  --roundingRel: calc(var(--spacingRel) * var(--roundFactor));
  --roundingAbs: calc(var(--spacingAbs) * var(--roundFactor));

  // Color components

  // Hue
  --hm: 120; // Main hue
  --hs: 60; // Hue separation
  --hc: calc(var(--hm) + var(--hs)); // Cooler hue
  --hw: calc(var(--hm) - var(--hs)); // Warmer hue

  // Saturation
  --sm: 50%; // Main saturation
  --ss: calc(var(--sm) / 2); // Secondary saturation
  --sh: calc((100% + var(--sm)) / 2); // Highlight saturation
  --sd: calc(var(--ss) / 4); // Disabled saturation

  // Lightness
  --lmo: 75%; // Main lightness offset; contrast from background

  color-scheme: light dark;

  @media (prefers-color-scheme: light) {
    --lm: calc(100% - var(--lmo)); // Main lightness
    --lti: calc((100% - var(--lm)) / 10); // Lightness tint increment
    --lsi: calc((0% - var(--lm)) / 10); // Lightness shade increment
    --black: black; // Variable black to invert for dark mode
    --white: white; // Variable white to invert for dark mode
  }
  @media (prefers-color-scheme: dark) {
    // Inverted for dark mode
    --lm: calc(0% + var(--lmo)); // Main lightness
    --lti: calc((0% - var(--lm)) / 10); // Lightness "shade" increment
    --lsi: calc((100% - var(--lm)) / 10); // Lightness "tint" increment
    --black: white; // Variable black inverted for dark mode
    --white: black; // Variable white inverted for dark mode
  }

  --lt9: calc(var(--lm) + (var(--lti) * 9)); // Lightness tint 9
  --lt8: calc(var(--lm) + (var(--lti) * 8)); // Lightness tint 8
  --lt7: calc(var(--lm) + (var(--lti) * 7)); // Lightness tint 7
  --lt6: calc(var(--lm) + (var(--lti) * 6)); // Lightness tint 6
  --lt5: calc(var(--lm) + (var(--lti) * 5)); // Lightness tint 5
  --lt4: calc(var(--lm) + (var(--lti) * 4)); // Lightness tint 4
  --lt3: calc(var(--lm) + (var(--lti) * 3)); // Lightness tint 3
  --lt2: calc(var(--lm) + (var(--lti) * 2)); // Lightness tint 2
  --lt1: calc(var(--lm) + (var(--lti) * 1)); // Lightness tint 1

  --ls1: calc(var(--lm) + (var(--lsi) * 1)); // Lightness shade 1
  --ls2: calc(var(--lm) + (var(--lsi) * 2)); // Lightness shade 2
  --ls3: calc(var(--lm) + (var(--lsi) * 3)); // Lightness shade 3
  --ls4: calc(var(--lm) + (var(--lsi) * 4)); // Lightness shade 4
  --ls5: calc(var(--lm) + (var(--lsi) * 5)); // Lightness shade 5
  --ls6: calc(var(--lm) + (var(--lsi) * 6)); // Lightness shade 6
  --ls7: calc(var(--lm) + (var(--lsi) * 7)); // Lightness shade 7
  --ls8: calc(var(--lm) + (var(--lsi) * 8)); // Lightness shade 8
  --ls9: calc(var(--lm) + (var(--lsi) * 9)); // Lightness shade 9

  // Basic colors
  --cm: hsl(var(--hm) var(--sm) var(--lm)); // Main color
  --cc: hsl(var(--hc) var(--ss) var(--lm)); // Cooler color
  --cw: hsl(var(--hw) var(--ss) var(--lm)); // Warmer color

  // Highlight glazes
  --cmg: hsl(var(--hm) var(--sh) calc(100% / 2) / 25%); // Main glaze
  --ccg: hsl(var(--hc) var(--sh) calc(100% / 2) / 25%); // Cooler glaze
  --cwg: hsl(var(--hw) var(--sh) calc(100% / 2) / 25%); // Warmer glaze

  // Disabled glazes
  --cmd: hsl(var(--hm) var(--sd) var(--lm) / 25%); // Main disabled
  --ccd: hsl(var(--hc) var(--sd) var(--lm) / 25%); // Cooler disabled
  --cwd: hsl(var(--hw) var(--sd) var(--lm) / 25%); // Warmer disabled

  // Main color ramp
  --cm95: hsl(var(--hm) var(--sm) var(--lt9)); // Main color tint 9
  --cm90: hsl(var(--hm) var(--sm) var(--lt8)); // Main color tint 8
  --cm85: hsl(var(--hm) var(--sm) var(--lt7)); // Main color tint 7
  --cm80: hsl(var(--hm) var(--sm) var(--lt6)); // Main color tint 6
  --cm75: hsl(var(--hm) var(--sm) var(--lt5)); // Main color tint 5
  --cm70: hsl(var(--hm) var(--sm) var(--lt4)); // Main color tint 4
  --cm65: hsl(var(--hm) var(--sm) var(--lt3)); // Main color tint 3
  --cm60: hsl(var(--hm) var(--sm) var(--lt2)); // Main color tint 2
  --cm55: hsl(var(--hm) var(--sm) var(--lt1)); // Main color tint 1
  --cm50: var(--cm); // Main color
  --cm45: hsl(var(--hm) var(--sm) var(--ls1)); // Main color shade 1
  --cm40: hsl(var(--hm) var(--sm) var(--ls2)); // Main color shade 2
  --cm35: hsl(var(--hm) var(--sm) var(--ls3)); // Main color shade 3
  --cm30: hsl(var(--hm) var(--sm) var(--ls4)); // Main color shade 4
  --cm25: hsl(var(--hm) var(--sm) var(--ls5)); // Main color shade 5
  --cm20: hsl(var(--hm) var(--sm) var(--ls6)); // Main color shade 6
  --cm15: hsl(var(--hm) var(--sm) var(--ls7)); // Main color shade 7
  --cm10: hsl(var(--hm) var(--sm) var(--ls8)); // Main color shade 8
  --cm05: hsl(var(--hm) var(--sm) var(--ls9)); // Main color shade 9

  // Cooler color ramp
  --cc95: hsl(var(--hc) var(--ss) var(--lt9)); // Cooler color tint 9
  --cc90: hsl(var(--hc) var(--ss) var(--lt8)); // Cooler color tint 8
  --cc85: hsl(var(--hc) var(--ss) var(--lt7)); // Cooler color tint 7
  --cc80: hsl(var(--hc) var(--ss) var(--lt6)); // Cooler color tint 6
  --cc75: hsl(var(--hc) var(--ss) var(--lt5)); // Cooler color tint 5
  --cc70: hsl(var(--hc) var(--ss) var(--lt4)); // Cooler color tint 4
  --cc65: hsl(var(--hc) var(--ss) var(--lt3)); // Cooler color tint 3
  --cc60: hsl(var(--hc) var(--ss) var(--lt2)); // Cooler color tint 2
  --cc55: hsl(var(--hc) var(--ss) var(--lt1)); // Cooler color tint 1
  --cc50: var(--cc); // Cooler color
  --cc45: hsl(var(--hc) var(--ss) var(--ls1)); // Cooler color shade 1
  --cc40: hsl(var(--hc) var(--ss) var(--ls2)); // Cooler color shade 2
  --cc35: hsl(var(--hc) var(--ss) var(--ls3)); // Cooler color shade 3
  --cc30: hsl(var(--hc) var(--ss) var(--ls4)); // Cooler color shade 4
  --cc25: hsl(var(--hc) var(--ss) var(--ls5)); // Cooler color shade 5
  --cc20: hsl(var(--hc) var(--ss) var(--ls6)); // Cooler color shade 6
  --cc15: hsl(var(--hc) var(--ss) var(--ls7)); // Cooler color shade 7
  --cc10: hsl(var(--hc) var(--ss) var(--ls8)); // Cooler color shade 8
  --cc05: hsl(var(--hc) var(--ss) var(--ls9)); // Cooler color shade 9

  // Warmer color ramp
  --cw95: hsl(var(--hw) var(--ss) var(--lt9)); // Warmer color tint 9
  --cw90: hsl(var(--hw) var(--ss) var(--lt8)); // Warmer color tint 8
  --cw85: hsl(var(--hw) var(--ss) var(--lt7)); // Warmer color tint 7
  --cw80: hsl(var(--hw) var(--ss) var(--lt6)); // Warmer color tint 6
  --cw75: hsl(var(--hw) var(--ss) var(--lt5)); // Warmer color tint 5
  --cw70: hsl(var(--hw) var(--ss) var(--lt4)); // Warmer color tint 4
  --cw65: hsl(var(--hw) var(--ss) var(--lt3)); // Warmer color tint 3
  --cw60: hsl(var(--hw) var(--ss) var(--lt2)); // Warmer color tint 2
  --cw55: hsl(var(--hw) var(--ss) var(--lt1)); // Warmer color tint 1
  --cw50: var(--cw); // Warmer color
  --cw45: hsl(var(--hw) var(--ss) var(--ls1)); // Warmer color shade 1
  --cw40: hsl(var(--hw) var(--ss) var(--ls2)); // Warmer color shade 2
  --cw35: hsl(var(--hw) var(--ss) var(--ls3)); // Warmer color shade 3
  --cw30: hsl(var(--hw) var(--ss) var(--ls4)); // Warmer color shade 4
  --cw25: hsl(var(--hw) var(--ss) var(--ls5)); // Warmer color shade 5
  --cw20: hsl(var(--hw) var(--ss) var(--ls6)); // Warmer color shade 6
  --cw15: hsl(var(--hw) var(--ss) var(--ls7)); // Warmer color shade 7
  --cw10: hsl(var(--hw) var(--ss) var(--ls8)); // Warmer color shade 8
  --cw05: hsl(var(--hw) var(--ss) var(--ls9)); // Warmer color shade 9

  @media (prefers-color-scheme: light) {
    --shade: #0001;
    --gloss: #fffc;
  }
  @media (prefers-color-scheme: dark) {
    --shade: #000c;
    --gloss: #fff1;
  }

  --ct: hsl(from var(--black) h s l / 75%); // Main text color
  --cbi: hsl(from var(--white) h s l / 25%); // Background inner color
  --cbo: hsl(from var(--white) h s l / 75%); // Background outer color

  // gradient curve direction
  @media (prefers-color-scheme: light) {
    --curve: bottom;
  }
  @media (prefers-color-scheme: dark) {
    --curve: top;
  }

  // Main header colors
  --skyHue3: 0;
  --skyHue2: 30;
  --skyHue1: 60;
  --seaHue1: 180;
  --seaHue2: 210;
  --seaHue3: 240;

  @media (prefers-color-scheme: light) {
    --cloudLight: hsl(from var(--cloudColor) h 100% calc(100% / 2) / 50%);
    --cloudColor: hsl(var(--skyHue1) 100% calc(100% / 2) / 25%);
    --skyColor3: hsl(var(--skyHue3) 100% calc(50% / 2));
    --skyColor2: hsl(var(--skyHue2) 100% calc(75% / 2));
    --skyColor1: hsl(var(--skyHue1) 100% calc(100% / 2));
    --skyMist: hsl(var(--skyHue1) 100% 87.5%);
    --seaMist: hsl(var(--seaHue1) 100% 87.5%);
    --seaColor1: hsl(var(--seaHue1) 100% calc(100% / 2));
    --seaColor2: hsl(var(--seaHue2) 100% calc(75% / 2));
    --seaColor3: hsl(var(--seaHue3) 100% calc(50% / 2));
    --swellColor: hsl(var(--seaHue1) 100% calc(100% / 2) / 25%);
    --swellLight: hsl(from var(--swellColor) h 100% calc(100% / 2) / 50%);
  }

  @media (prefers-color-scheme: dark) {
    --cloudLight: hsl(from var(--cloudColor) h 100% calc(100% / 2) / 50%);
    --cloudColor: hsl(var(--skyHue1) 100% calc(75% / 2) / 25%);
    --skyColor3: hsl(var(--skyHue3) 100% calc(50% / 2));
    --skyColor2: hsl(var(--skyHue2) 100% calc(25% / 2));
    --skyColor1: hsl(var(--skyHue1) 100% calc(12.5% / 2));
    --skyMist: hsl(var(--skyHue1) 100% calc(6.25% / 2));
    --seaMist: hsl(var(--seaHue1) 100% calc(6.25% / 2));
    --seaColor1: hsl(var(--seaHue1) 100% calc(12.5% / 2));
    --seaColor2: hsl(var(--seaHue2) 100% calc(25% / 2));
    --seaColor3: hsl(var(--seaHue3) 100% calc(50% / 2));
    --swellColor: hsl(var(--seaHue1) 100% calc(75% / 2) / 25%);
    --swellLight: hsl(from var(--swellColor) h 100% calc(100% / 2) / 50%);
  }

  --seaShadow: hsl(from var(--seaColor1) h 100% 0% / 100%); // For footer

  --mbo: hsl(from black h s l / 93.75%); // Modal background outer

  // Standard breakpoints
  --bp1: 20rem;
  --bp2: 40rem;
  --bp3: 60rem;
  --bp4: 80rem;
}
$bp1: 20rem; // = 320px
$bp2: 40rem; // = 640px
$bp3: 60rem; // = 640px
$bp4: 80rem; // = 1280px

// Calculate responsive font sizes
@function su($num) {
  @return math.div($num, ($num * 0 + 1));
}
@function rfs($minValue, $minWidth, $maxValue, $maxWidth) {
  @return clamp(
    $minValue,
    calc(
      $minValue + (100vw - $minWidth) * (su($maxValue) - su($minValue)) /
        (su($maxWidth) - su($minWidth))
    ),
    $maxValue
  );
}

* {
  transition: all 0.5s;
}

html {
  height: 100%;
  background: black;
  color: var(--ct);
  font: {
    family: "Nunito", sans-serif;
    size: 1pc;
  }
  line-height: 1;
  scroll-padding-top: 6rem;
  scroll-behavior: smooth;
}

body {
  display: flex;
  flex-flow: column nowrap;
  justify-content: space-between;
  min-height: 100vh;
  padding: 0;
  margin: 0;
}

section,
header,
footer,
main {
  display: block;
}

a {
  border: 0;
  color: var(--cm);
  text-decoration: underline;
  text-shadow: 1pt 1pt 1pt transparent;
  cursor: pointer;

  &:link,
  &:visited {
    color: var(--cm50);
  }
  &:hover {
    color: var(--cm55);
  }
  &:active {
    color: var(--cm60);
  }
  &:hover,
  &:active {
    text-shadow: 1pt 1pt 1pt var(--shade);
  }

  img {
    border: 0;
  }
}

code {
  white-space: normal;
}

h2,
h3,
h4,
h5,
h6 {
  margin: 0 auto;
  padding: 0 var(--spacing);
  border: none;
  &:not(:has(+ .description)) {
    padding-bottom: calc(2 * var(--spacing));
    border-bottom: 1pt groove var(--cw75);
    border-radius: var(--rounding);
    margin-bottom: var(--spacing);
  }
  outline: none;
  color: var(--cm);
  font: {
    family: "Itim", "Nunito", sans-serif;
    weight: normal;
  }
  text-align: center;
  line-height: 1.25;
  text-shadow: 0.0625em 0.0625em 0.0625em transparent;
  &:hover,
  &:focus,
  &:active,
  *:hover > &,
  *:focus > &,
  *:active > & {
    text-shadow: 0.0625em 0.0625em 0.0625em var(--shade);
  }
  position: relative;
  overflow-wrap: anywhere;

  span {
    white-space: nowrap;
  }
}

// Main body font size at bp4
$mfs: 1.25rem;

h2 {
  font-size: rfs(1.5rem, $bp1, (1 + 2) * $mfs, $bp4);
}
h3 {
  font-size: rfs(1.4rem, $bp1, (1 + 1) * $mfs, $bp4);
}
h4 {
  font-size: rfs(1.3rem, $bp1, (1 + 0.5) * $mfs, $bp4);
}
h5 {
  font-size: rfs(1.2rem, $bp1, (1 + 0.25) * $mfs, $bp4);
}
h6 {
  font-size: rfs(1.1rem, $bp1, (1 + 0.125) * $mfs, $bp4);
}

header {
  position: sticky;
  top: 0;
  z-index: 1;
  max-height: 100vh;
  padding: 0;
  border: 0;
  background: black;
  text-align: center;
  overflow-y: hidden;
  display: flex;
  flex-flow: column;

  @media (min-width: $bp2) {
    top: calc(-1 * (3 * max(1.5rem, 4vw) + 2vw + 0.5rem));
    overflow-y: visible;
  }

  @media only print {
    display: none;
  }

  h1,
  &:hover h1 {
    display: flex;
    box-sizing: border-box;
    width: 100%;
    background: linear-gradient(
      to bottom,
      var(--skyColor2) 0%,
      var(--skyColor1) 37.5%,
      var(--skyMist) 48%,
      var(--white) 50%,
      var(--seaMist) 52%,
      var(--seaColor1) 62.5%,
      var(--seaColor2) 100%
    );
    margin: 0 auto;
    padding: 1vw 3vw;
    border: 0.25em solid black;
    border-radius: 0.5em;
    outline: 1pt solid black;
    color: var(--cm);
    --sW: calc(1em / 32); // stroke width
    --sC: hsl(from var(--white) h s l / 50%); // stroke color
    -webkit-text-fill-color: var(--cm);
    -webkit-text-stroke: calc(1em / 32) black;
    paint-order: stroke fill;
    text-shadow: 0.0125em 0.0125em 0.0125em #000, 0.025em 0.025em 0.025em #0008,
      0.05em 0.05em 0.05em #0004, 0.1em 0.1em 0.1em #0002,
      var(--sW) var(--sW) var(--sW) var(--sC), 0 var(--sW) var(--sW) var(--sC),
      calc(-1 * var(--sW)) var(--sW) var(--sW) var(--sC),
      calc(-1 * var(--sW)) 0 var(--sW) var(--sC),
      calc(-1 * var(--sW)) calc(-1 * var(--sW)) var(--sW) var(--sC),
      0 calc(-1 * var(--sW)) var(--sW) var(--sC),
      var(--sW) calc(-1 * var(--sW)) var(--sW) var(--sC),
      var(--sW) 0 var(--sW) var(--sC);
    font-family: "Princess Sofia", "Itim", "Nunito", sans-serif;
    font-size: max(1.5rem, 4vw);
    display: flex;
    justify-content: center;
    align-items: center;
    white-space: nowrap;
    letter-spacing: 0.1em;
    line-height: 2;
    cursor: pointer;

    &::before {
      content: "";
      display: inline-block;
      width: 1.5em;
      height: 1.5em;
      background: center / contain no-repeat url(/__images/logo.png);
      flex-shrink: 0;
    }

    &::after {
      content: "";
      display: inline-block;
      width: 1em;
      height: 1em;
      background: center / contain no-repeat
        url('data:image/svg+xml,<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0.0em" y="0.0em" width="1.0em" height="1.0em" viewBox="0 0 1.0em 1.0em" ><rect x="0.0em" y="0.0em" width="1.0em" height="0.2em" /><rect x="0.0em" y="0.4em" width="1.0em" height="0.2em" /><rect x="0.0em" y="0.8em" width="1.0em" height="0.2em" /></svg>');
      flex-shrink: 0;
      @media (prefers-color-scheme: light) {
        filter: none;
      }
      @media (prefers-color-scheme: dark) {
        filter: invert(1);
      }
    }

    > span {
      flex-grow: 1;
      flex-basis: 100%;

      > span {
        display: none;

        @media (min-width: $bp1) {
          display: inline;
        }
      }
    }

    > span:first-of-type {
      display: none;
    }

    @media (min-width: $bp2) {
      background: linear-gradient(
          transparent calc(50% - 1em),
          var(--skyMist) 50%,
          var(--seaMist) 50%,
          transparent calc(50% + 1em)
        ),
        linear-gradient(
          to bottom,
          transparent 0%,
          var(--cloudColor) calc(50% - 1.25 * 50% / 2),
          var(--cloudLight) calc(50% - 1.125 * 50% / 2),
          transparent calc(50% - 1 * 50% / 2),
          var(--cloudColor) calc(50% - 1.25 * 50% / 4),
          var(--cloudLight) calc(50% - 1.125 * 50% / 4),
          transparent calc(50% - 1 * 50% / 4),
          var(--cloudColor) calc(50% - 1.25 * 50% / 8),
          var(--cloudLight) calc(50% - 1.125 * 50% / 8),
          transparent calc(50% - 1 * 50% / 8),
          var(--cloudColor) calc(50% - 1.25 * 50% / 16),
          var(--cloudLight) calc(50% - 1.125 * 50% / 16),
          transparent calc(50% - 1 * 50% / 16),
          var(--cloudColor) calc(50% - 1.25 * 50% / 32),
          var(--cloudLight) calc(50% - 1.125 * 50% / 32),
          transparent calc(50% - 1 * 50% / 32),
          var(--cloudColor) calc(50% - 1.25 * 50% / 64),
          var(--cloudLight) calc(50% - 1.125 * 50% / 64),
          transparent calc(50% - 1 * 50% / 64),
          var(--cloudColor) calc(50% - 1.25 * 50% / 128),
          var(--cloudLight) calc(50% - 1.125 * 50% / 128),
          transparent calc(50% - 1 * 50% / 128),
          var(--cloudColor) calc(50% - 1.25 * 50% / 256),
          var(--cloudLight) calc(50% - 1.125 * 50% / 256),
          transparent calc(50% - 1 * 50% / 256),
          var(--cloudColor) calc(50% - 1.25 * 50% / 512),
          var(--cloudLight) calc(50% - 1.125 * 50% / 512),
          transparent calc(50% - 1 * 50% / 512),
          var(--cloudColor) calc(50% - 1.25 * 50% / 1024),
          var(--cloudLight) calc(50% - 1.125 * 50% / 1024),
          transparent calc(50% - 1 * 50% / 1024),
          transparent calc(50% + 1 * 50% / 1024),
          var(--swellLight) calc(50% + 1.625 * 50% / 1024),
          var(--swellColor) calc(50% + 1.75 * 50% / 1024),
          transparent calc(50% + 1 * 50% / 512),
          var(--swellLight) calc(50% + 1.625 * 50% / 512),
          var(--swellColor) calc(50% + 1.75 * 50% / 512),
          transparent calc(50% + 1 * 50% / 256),
          var(--swellLight) calc(50% + 1.625 * 50% / 256),
          var(--swellColor) calc(50% + 1.75 * 50% / 256),
          transparent calc(50% + 1 * 50% / 128),
          var(--swellLight) calc(50% + 1.625 * 50% / 128),
          var(--swellColor) calc(50% + 1.75 * 50% / 128),
          transparent calc(50% + 1 * 50% / 64),
          var(--swellLight) calc(50% + 1.625 * 50% / 64),
          var(--swellColor) calc(50% + 1.75 * 50% / 64),
          transparent calc(50% + 1 * 50% / 32),
          var(--swellLight) calc(50% + 1.625 * 50% / 32),
          var(--swellColor) calc(50% + 1.75 * 50% / 32),
          transparent calc(50% + 1 * 50% / 16),
          var(--swellLight) calc(50% + 1.625 * 50% / 16),
          var(--swellColor) calc(50% + 1.75 * 50% / 16),
          transparent calc(50% + 1 * 50% / 8),
          var(--swellLight) calc(50% + 1.625 * 50% / 8),
          var(--swellColor) calc(50% + 1.75 * 50% / 8),
          transparent calc(50% + 1 * 50% / 4),
          var(--swellLight) calc(50% + 1.625 * 50% / 4),
          var(--swellColor) calc(50% + 1.75 * 50% / 4),
          transparent calc(50% + 1 * 50% / 2),
          var(--swellLight) calc(50% + 1.625 * 50% / 2),
          var(--swellColor) calc(50% + 1.75 * 50% / 2),
          transparent 100%
        ),
        linear-gradient(
          to bottom,
          var(--skyColor3) 0%,
          var(--skyColor2) 37.5%,
          var(--skyColor1) 48%,
          var(--skyMist) 50%,
          var(--seaMist) 50%,
          var(--seaColor1) 52%,
          var(--seaColor2) 62.5%,
          var(--seaColor3) 100%
        );
      background-size: 100% 100%, auto;
      background-position: center, center, center;
      animation-name: windAndWaves;
      animation-duration: 12s;
      animation-iteration-count: infinite;
      animation-direction: normal;
      animation-timing-function: cubic-bezier(0, 0, 1, 0.75);
      @keyframes windAndWaves {
        from {
          background-size: 100%, 100% 100%, auto;
        }
        to {
          background-size: 100%, 100% 200%, auto;
        }
      }
      padding: 1vw;
      border: 0.5rem solid black;
      border-radius: 6.25vw 6.25vw 0 0;
      box-shadow: inset 0 0 0.5vw 0 #0008, inset 0 0 0 0.5vw #000c;

      &::before {
        width: 3em;
        height: 3em;
      }

      &::after {
        display: none;
      }

      > span:first-of-type {
        display: inline;
        order: -1;
      }
    }
  }

  a {
    text-decoration: none;
  }
}

footer {
  font-family: "Itim", "Nunito", sans-serif;
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  background: linear-gradient(to bottom, transparent, var(--seaShadow)),
    linear-gradient(
      to bottom,
      transparent 0%,
      transparent calc(1 * 100% / 32),
      var(--swellLight) calc(1.25 * 100% / 32),
      var(--swellColor) calc(1.5 * 100% / 32),
      transparent calc(1 * 100% / 16),
      var(--swellLight) calc(1.25 * 100% / 16),
      var(--swellColor) calc(1.5 * 100% / 16),
      transparent calc(1 * 100% / 8),
      var(--swellLight) calc(1.25 * 100% / 8),
      var(--swellColor) calc(1.5 * 100% / 8),
      transparent calc(1 * 100% / 4),
      var(--swellLight) calc(1.25 * 100% / 4),
      var(--swellColor) calc(1.5 * 100% / 4),
      transparent calc(1 * 100% / 2),
      var(--swellLight) calc(1.25 * 100% / 2),
      var(--swellColor) calc(1.5 * 100% / 2),
      transparent 100%
    ),
    linear-gradient(
      to bottom,
      var(--seaColor1) 0%,
      var(--seaColor2) 50%,
      var(--seaColor3) 100%
    );
  background-size: 100% 100%, auto;
  background-position: center, top, center;
  border-top: 3pt ridge var(--cw75);
  color: var(--cw25);
  text-align: center;
  box-shadow: 0 0.5em 0.5em var(--shade) inset;
  animation-name: waves;
  animation-duration: 4s;
  animation-iteration-count: infinite;
  animation-direction: normal;
  animation-timing-function: linear;
  @keyframes waves {
    from {
      background-size: 100%, 100% 100%, auto;
    }
    to {
      background-size: 100%, 100% 200%, auto;
    }
  }

  p {
    margin: 0;
    padding: var(--spacing);
    font-size: min(2rem, 4vw);
    color: white;
    -webkit-text-fill-color: white;
    -webkit-text-stroke: calc(1em / 16) black;
    paint-order: stroke fill;
    text-shadow: 0.0125em 0.0125em 0.0125em #000, 0.025em 0.025em 0.025em #0008,
      0.05em 0.05em 0.05em #0004, 0.1em 0.1em 0.1em #0002;
  }
  a {
    text-decoration: none;
    letter-spacing: 0.5ch;
    text-shadow: inherit;
    &:link {
      color: var(--cm85);
    }
    &:hover {
      color: var(--cm90);
      text-shadow: inherit;
    }
    &:active {
      color: var(--cm95);
      text-shadow: inherit;
    }
    &:visited {
      color: var(--cm80);
    }
  }
  @media only print {
    display: none;
  }
}

#menu {
  overflow-x: hidden;
  overflow-y: auto;
  padding: 0 0.5em;
  gap: 0 0.5em;
  display: flex;
  flex-flow: column nowrap;
  flex-shrink: 1;
  position: relative;
  z-index: 1;
  --nav-grad: linear-gradient(
    to var(--curve),
    var(--cc95) calc(0 * 100% / 6),
    var(--cc85) calc(1 * 100% / 6),
    var(--cc85) calc(5 * 100% / 6),
    var(--cc75) calc(6 * 100% / 6)
  );

  @media (min-width: $bp2) {
    flex-flow: row wrap;
    max-height: auto;
    min-height: auto;
    overflow-x: visible;
    overflow-y: visible;
    background-position-y: 0;
  }

  @media only print {
    display: none;
  }

  > a {
    display: block;
    float: left;
    order: -1;
    z-index: 1;
    margin: 0;
    padding: 0 1em;
    border: none;
    border-top: 0pt solid white;
    outline: none;
    border-top-left-radius: calc(0.5 * var(--rounding));
    border-top-right-radius: calc(0.5 * var(--rounding));
    background: var(--nav-grad);
    background-size: 100% 300%;
    background-position-y: 50%;
    overflow: hidden;
    text-overflow: ellipsis;
    color: var(--ct);
    text: {
      align: center;
      decoration: none;
    }
    line-height: 2;
    flex: 1 1 auto;
    box-shadow: 1pt 1pt 0pt transparent inset, -1pt 0pt 0pt transparent inset,
      1pt 1pt 0 0 var(--shade) inset;
    opacity: 50%;

    &:nth-last-of-type(1) {
      opacity: 100%;
    }
    &:nth-last-of-type(2) {
      opacity: 87.5%;
    }
    &:nth-last-of-type(3) {
      opacity: 75%;
    }
    &:nth-last-of-type(4) {
      opacity: 62.5%;
    }
    &:nth-last-of-type(5) {
      opacity: 50%;
    }

    @media (min-width: $bp2) {
      margin-bottom: -2em;
      padding-bottom: 2em;
      &:hover,
      &:focus,
      &:active {
        box-shadow: 1pt 1pt 0pt var(--gloss) inset,
          -1pt 0pt 0pt var(--shade) inset, 1pt 1pt 0 0 transparent inset;
        opacity: 100%;
        background-position-y: 0%;
        & ~ a:last-of-type {
          opacity: 93.75%;
        }
      }
    }

    &:last-of-type + ul {
      display: flex;
    }
  }

  ul {
    flex-basis: 100%;
    z-index: 1;
    display: none;
    flex-flow: row wrap;
    flex-shrink: 1;
    overflow-y: auto;
    justify-content: space-between;
    clear: both;
    margin: 0 -0.5em;
    padding: 0.5em;
    gap: 0.5em;
    border: 0;
    background: var(--nav-grad);
    background-size: 100% 300%;
    background-position-y: 50%;
    text-align: center;
    line-height: 2.5;
    box-shadow: 0pt -1pt 0 0 var(--shade);
    @media (min-width: $bp2) {
      box-shadow: 0pt -1pt 0pt transparent inset, 0pt 1pt 1pt transparent,
        0 -1pt 0 0 var(--shade) inset;
      &:hover,
      &:focus,
      &:active {
        box-shadow: 0pt -1pt 0pt var(--shade) inset, 0pt 1pt 1pt var(--shade),
          0 -1pt 0 0 transparent inset;
        background-position-y: 100%;
      }
      transition: height 0s, margin 0s, padding 0s;
    }

    @media (min-width: $bp2) {
      overflow-y: visible;
    }

    > * {
      flex: 1 1 100%;
      white-space: normal;
      @media (min-width: $bp2) {
        flex: 1 0 0%;
        white-space: nowrap;
      }
    }

    li {
      position: relative;
      display: inline-block;
      height: auto;
      margin: 0;
      padding: 0;
      border-radius: calc(0.5 * var(--rounding));
      line-height: 1;
      list-style-type: none;

      a {
        display: inline-block;
        float: none;
        width: 100%;
        box-sizing: border-box;
        margin: 0;
        padding: 0.5em 2em;
        border: none;
        border-radius: calc(0.5 * var(--rounding));
        background: radial-gradient(transparent, var(--ccg)),
          linear-gradient(to var(--curve), var(--cc95) 0%, var(--cc75) 100%);
        background-size: 1000% 1000%;
        background-position-y: 50%;
        color: var(--ct);
        font-weight: normal;
        text: {
          transform: none;
          decoration: none;
        }
        overflow-wrap: break-word;
        line-height: 1;
        box-shadow: 1pt 1pt 0pt transparent inset,
          -1pt -1pt 0pt transparent inset, 1pt 1pt 1pt transparent,
          0 0 0 1pt var(--shade) inset;
        transition: all 1s;

        &:hover,
        &:focus,
        &:active {
          box-shadow: 1pt 1pt 0pt var(--gloss) inset,
            -1pt -1pt 0pt var(--shade) inset, 1pt 1pt 1pt var(--shade),
            0 0 0 1pt transparent inset;
          background-size: 100% 100%;
        }

        &:hover {
          background: radial-gradient(transparent, var(--cmg)),
            linear-gradient(to var(--curve), var(--cm95), var(--cm75));
        }
        &:active {
          background: radial-gradient(transparent, var(--cwg)),
            linear-gradient(to var(--curve), var(--cw95), var(--cw75));
        }

        /* For the dropdown menu arrows */
        &.submenu {
          &::before,
          &::after {
            content: "▼";
            display: inline-block;
            position: absolute;
            top: 0.5em;
            opacity: 0.25;
            vertical-align: middle;
            transform: rotate(0deg);

            @media only print {
              display: none;
            }
          }

          &::before {
            left: 0.5em;
            margin-right: 0.5em;
            transform: rotate(-90deg);
          }
          &::after {
            right: 0.5em;
            margin-left: 0.5em;
            transform: rotate(90deg);
          }
          &:hover::before {
            text-shadow: -1pt 1pt 1pt var(--shade);
          }
        }
      }

      /* An active dropdown menu button */
      &.current {
        position: relative;
        z-index: 1;

        a {
          background: radial-gradient(transparent, var(--cmg)),
            linear-gradient(to var(--curve), var(--cm95), var(--cm75));
          background-size: 1000% 1000%;
          &:hover {
            background: radial-gradient(transparent, var(--cwg)),
              linear-gradient(to var(--curve), var(--cw95), var(--cw75));
            background-size: 100% 100%;
          }
          &:active {
            background: radial-gradient(transparent, var(--cwg)),
              linear-gradient(to var(--curve), var(--cw95), var(--cw75));
            background-size: 100% 100%;
          }

          /* Flip the dropdown menu arrows */
          &::before,
          &::after {
            transform: rotate(0deg);
          }
          &:hover::before {
            text-shadow: 1pt 1pt 1pt var(--shade);
          }
        }
      }

      /* The contents of the dropdown menu */
      ul {
        display: none;
        overflow-y: auto;
        position: static;
        z-index: -1;
        top: 0;
        left: 0.5em;
        width: 100%;
        padding: 0.125em 0;
        border-radius: calc(0.5 * var(--rounding));
        background: linear-gradient(
          to right,
          var(--cm70),
          var(--cm80),
          var(--cm70)
        );
        background-size: 1000% 1000%;
        background-position-x: 50%;
        box-shadow: 1pt 1pt 0pt transparent inset,
          -1pt -1pt 0pt transparent inset, 1pt 1pt 1pt transparent,
          0 0 0 1pt var(--shade) inset;
        &:hover,
        &:focus,
        &:active {
          box-shadow: 1pt 1pt 0pt var(--gloss) inset,
            -1pt -1pt 0pt var(--shade) inset, 1pt 1pt 1pt var(--shade),
            0 0 0 1pt transparent inset;
          background-size: 100% 100%;
        }

        @media (min-width: $bp2) {
          position: absolute;
          width: 100%;
          box-sizing: border-box;
          max-height: calc(100vh - 10em);
          padding: 0;
          padding-top: 2em;
        }

        li {
          display: block;
          margin: 0.5em;
          white-space: normal;

          a {
            width: 100%;
            box-sizing: border-box;
            padding: 0.5em 1em;
          }
        }
      }
    }
  }
}

main {
  display: flex;
  flex-flow: column nowrap;
  justify-content: space-between;
  align-items: center;
  flex: 1 1 auto;
  margin: 0;
  padding: var(--spacingAbs);
  gap: var(--spacingAbs);
  border: 0;
  outline: 0;
  background: radial-gradient(
    farthest-corner,
    var(--cw75) 0%,
    var(--cw95) 100%
  );
  background-position: center;
  background-size: 100% 100%;
  animation-name: mainLighting;
  animation-duration: 44s;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  transition-timing-function: cubic-bezier(0.666, 2, 0.333, -1);
  @keyframes mainLighting {
    from {
      background-size: 100% 100%;
    }
    to {
      background-size: 400% 200%;
    }
  }
  line-height: 1.5;
  font-size: rfs(1rem, $bp1, $mfs, $bp4);

  > * {
    flex: 0 1 auto;
    text-shadow: 0 0 0.5em var(--cbi);
  }

  * {
    transition: all 0.5s, opacity var(--dur) linear,
      transform var(--dur) cubic-bezier(0.75, 1.75, 0.75, 0.75)
        calc(var(--delA) + var(--delB));
    --dur: 1s;
    --delA: 0s;
    --delB: 0s;
    &.animate-in > * {
      --delA: calc(1s / 16);
      &.animate-in > * {
        --delA: calc(2s / 16);
        &.animate-in > * {
          --delA: calc(3s / 16);
          &.animate-in > * {
            --delA: calc(4s / 16);
          }
        }
      }
    }
    &.animate-in {
      @media only screen {
        opacity: 0;
        transform: rotateY(0.25turn);
      }
      transition-delay: 0s;
      --dur: 0s;
    }
  }

  a,
  em,
  strong,
  i,
  b,
  span {
    --dur: 0s;
  }

  p {
    text-indent: 2em;

    &.description {
      padding: var(--spacing);
      padding-top: 0;
      border-radius: var(--rounding);
      border: none;
      border-bottom: 1pt groove var(--cw75);
      color: var(--cm50);
      text: {
        align: center;
        indent: 0;
      }
    }
  }

  ul,
  ol {
    overflow: hidden;
    margin: 0;
    padding: 0;
    padding-left: 1.5ch;

    li {
      margin: var(--spacing) 0;
      padding: 0;
    }

    p {
      border: 0;
      text-indent: 0;
    }

    &.toc {
      text-align: center;

      li {
        margin: 0;
        margin-bottom: 0.5em;
        padding: 0;

        &:before {
          display: none;
        }
        span {
          white-space: nowrap;
        }
      }
    }
  }

  blockquote {
    position: relative;
    margin: 0 auto;
    padding: var(--spacing) calc(2 * var(--spacing));
    border: 1pt dashed var(--cw75);
    border-radius: calc(0.5 * var(--rounding));

    &:before {
      content: "“";
      display: block;
      width: 1em;
      height: 1em;
      position: absolute;
      top: 0;
      left: 1rem;
      font-size: 2em;
      text-align: left;
    }
    &:after {
      content: "”";
      display: block;
      width: 1em;
      height: 1em;
      position: absolute;
      bottom: 0;
      right: 1rem;
      font-size: 2em;
      text-align: right;
    }
  }

  hr {
    content: url(/__images/hr-vine.svg);
    clear: both;
    width: 100%;
    margin: var(--spacing) auto;
    padding: 0;
    border: 0;
    outline: 0;
    filter: drop-shadow(0 2pt 1pt var(--shade));
  }

  table {
    width: 100%;
    box-sizing: border-box;
    font-size: 1em;
    border: 1pt solid black;
    margin: var(--spacing) auto auto auto;
    background: #ccc;
    th,
    td {
      padding: var(--spacing);
      border: 1pt solid black;
      text-align: center;
    }
    th {
      background: var(--cm95);
      text-align: center;
    }
    td {
      background: var(--white);
    }
  }

  .toggleAllControls {
    --dur: 0.5s;
    width: 100%;
    max-width: calc(80ch - 2 * var(--spacing));
    display: flex;
    flex-flow: row wrap;
    @media (min-width: $bp2) {
      flex-wrap: nowrap;
    }
    justify-content: center;
    align-items: stretch;
    gap: var(--spacing);
    a {
      flex: 1 1 100%;
      position: relative;
      font-size: 0.75rem;
      text-decoration: none;
      text-transform: uppercase;
      text-align: center;
      letter-spacing: 0.125ch;
      display: flex;
      justify-content: center;
      align-items: center;
      background: var(--white);
      border-radius: calc(0.5 * var(--rounding));
      padding: 0.25em 2em;
      border: 1pt solid var(--gloss);
      opacity: 0.75;
      &.expandAll,
      &.expandAnchor,
      &.collapseOthers,
      &.collapseAll {
        &::before,
        &::after {
          content: "▼";
          opacity: 0.25;
          position: absolute;
          top: 0;
          bottom: 0;
          display: flex;
          align-items: center;
        }
        &::before {
          left: 0.5em;
        }
        &::after {
          right: 0.5em;
        }
      }
      &.collapseOthers,
      &.collapseAll {
        &::before {
          transform: rotate(-90deg);
        }
        &::after {
          transform: rotate(90deg);
        }
        &:hover::before {
          text-shadow: -1pt 1pt 1pt var(--shade);
        }
      }
      &.anchorTarget {
        border-left-width: 0;
        border-right-width: 0;
        border-radius: 0;
        order: 10;
        @media (min-width: $bp2) {
          order: unset;
        }
        &::before,
        &::after {
          content: "↴";
        }
        &::before {
          margin-right: 1ch;
          transform: scaleY(-1) rotate(-90deg);
        }
        &::after {
          margin-left: 1ch;
        }
        :last-of-type &.disabled {
          opacity: 0.125;
          &::before,
          &::after {
            display: none;
          }
        }
      }
      &.disabled {
        pointer-events: none;
        opacity: 0.25;
        display: none;
        @media (min-width: $bp2) {
          display: block;
        }
      }
    }
    &:last-of-type .anchorTarget {
      order: -1;
      @media (min-width: $bp2) {
        order: unset;
      }
      &::before {
        transform: rotate(-90deg);
      }
      &::after {
        transform: scaleY(-1);
      }
      &:hover::before {
        text-shadow: -1pt 1pt 1pt var(--shade);
      }
      &:hover::after {
        text-shadow: 1pt -1pt 1pt var(--shade);
      }
    }
    @media only print {
      display: none;
    }
  }

  section {
    --dur: 0s;
    transition: all 0.5s;
    clear: both;
    width: 100%;
    box-sizing: border-box;
    max-width: calc(80ch + 2 * var(--spacing));
    margin: 0 auto;
    padding: var(--spacing);
    gap: var(--spacing);
    border: 0;
    outline: 0;
    border-radius: calc(2 * var(--rounding));
    background: radial-gradient(farthest-corner, var(--cbi), var(--cbo));
    background-position: center;
    animation-name: mainLighting;
    animation-duration: 5s;
    &:last-child {
      margin-bottom: 0;
    }
    --gimwsm: 2;
    .gallery.expansive:last-child .item {
      max-width: calc(80ch - var(--gimwsm) * var(--spacing));
    }
    &:nth-of-type(5n + 1) {
      animation-delay: 0s;
    }
    &:nth-of-type(10n + 2) {
      animation-delay: 0.5s;
    }
    &:nth-of-type(10n + 3) {
      animation-delay: 1s;
    }
    &:nth-of-type(10n + 4) {
      animation-delay: 1.5s;
    }
    &:nth-of-type(10n + 5) {
      animation-delay: 2s;
    }
    &:nth-of-type(10n + 6) {
      animation-delay: 2.5s;
    }
    &:nth-of-type(10n + 7) {
      animation-delay: 3s;
    }
    &:nth-of-type(10n + 8) {
      animation-delay: 3.5s;
    }
    &:nth-of-type(10n + 9) {
      animation-delay: 4s;
    }
    &:nth-of-type(10n + 0) {
      animation-delay: 4.5s;
    }
    animation-iteration-count: infinite;
    animation-direction: alternate;
    animation-timing-function: cubic-bezier(0.666, 2, 0.333, -1);
    box-shadow: 2pt 2pt 2pt transparent, -2pt -2pt 2pt transparent,
      1pt 1pt 0pt transparent inset, -1pt -1pt 0pt transparent inset,
      0 0 0 1pt var(--gloss) inset;
    &:hover,
    &:focus,
    &:active {
      box-shadow: 2pt 2pt 2pt var(--shade), -2pt -2pt 2pt var(--gloss),
        1pt 1pt 0pt var(--gloss) inset, -1pt -1pt 0pt var(--shade) inset,
        0 0 0 1pt transparent inset;
    }

    > *:last-child {
      margin-bottom: 0;
    }

    &:after {
      content: "";
      display: block;
      height: 0;
      clear: both;
    }

    &.toggleable {
      h1,
      h2,
      h3,
      h4,
      h5,
      h6 {
        padding-left: 1em;
        padding-right: 1em;
        &::before,
        &::after {
          content: "▼";
          opacity: 0.0625;
          position: absolute;
          top: 0;
          bottom: auto;
          display: flex;
          align-items: center;

          @media only print {
            display: none;
          }
        }

        &::before {
          left: 0;
        }
        &::after {
          right: 0;
        }

        &::before,
        &::after {
          --dur: 1s;
          transition: all var(--dur), opacity var(--dur) var(--dur);
        }

        &.animate-in {
          &::before,
          &::after {
            @media only screen {
              opacity: 0;
            }
            transition-delay: 0s;
          }
        }

        &:hover {
          &::before,
          &::after {
            opacity: 0.25;
          }
        }
      }
      &.collapsed {
        & > h1,
        & > h2,
        & > h3,
        & > h4,
        & > h5,
        & > h6 {
          &::before {
            transform: rotate(-90deg);
            opacity: 0.25;
          }
          &::after {
            transform: rotate(90deg);
            opacity: 0.25;
          }
        }
        > *:not(h2, h3, h4, h5, h6, .description) {
          @media only print {
            display: initial !important;
          }
        }
      }
    }

    section {
      margin-bottom: var(--spacing);
      --gimwsm: 4;
      border-radius: calc(1.75 * var(--rounding));
      animation-duration: 4s;
      &:nth-of-type(8n + 1) {
        animation-delay: 0s;
      }
      &:nth-of-type(8n + 2) {
        animation-delay: 0.5s;
      }
      &:nth-of-type(8n + 3) {
        animation-delay: 1s;
      }
      &:nth-of-type(8n + 4) {
        animation-delay: 1.5s;
      }
      &:nth-of-type(8n + 5) {
        animation-delay: 2s;
      }
      &:nth-of-type(8n + 6) {
        animation-delay: 2.5s;
      }
      &:nth-of-type(8n + 7) {
        animation-delay: 3s;
      }
      &:nth-of-type(8n + 0) {
        animation-delay: 3.5s;
      }
      --dur: 0.25s;
      section {
        --gimwsm: 6;
        border-radius: calc(1.5 * var(--rounding));
        animation-duration: 3s;
        &:nth-of-type(6n + 1) {
          animation-delay: 0s;
        }
        &:nth-of-type(6n + 2) {
          animation-delay: 1.5s;
        }
        &:nth-of-type(6n + 3) {
          animation-delay: 1s;
        }
        &:nth-of-type(6n + 4) {
          animation-delay: 1.5s;
        }
        &:nth-of-type(6n + 5) {
          animation-delay: 2s;
        }
        &:nth-of-type(6n + 0) {
          animation-delay: 2.5s;
        }
        --dur: 0.5s;
        section {
          --gimwsm: 8;
          border-radius: calc(1.25 * var(--rounding));
          animation-duration: 2s;
          &:nth-of-type(4n + 1) {
            animation-delay: 0s;
          }
          &:nth-of-type(4n + 2) {
            animation-delay: 0.5s;
          }
          &:nth-of-type(4n + 3) {
            animation-delay: 1s;
          }
          &:nth-of-type(4n + 0) {
            animation-delay: 1.5s;
          }
          --dur: 0.75s;
          section {
            --gimwsm: 10;
            border-radius: var(--rounding);
            animation-duration: 1s;
            &:nth-of-type(2n + 1) {
              animation-delay: 0s;
            }
            &:nth-of-type(2n + 2) {
              animation-delay: 0.5s;
            }
            --dur: 1s;
          }
        }
      }
    }

    .duo {
      display: flex;
      flex-flow: row wrap;
      justify-content: space-around;
      align-items: stretch;
      text-align: center;
      gap: var(--spacing);

      > * {
        display: inline-block;
        float: none;
        flex: 1 1 20ch;
        width: 36em;
        max-width: 100%;
        box-sizing: border-box;
        padding: var(--spacing);
        vertical-align: top;
        margin: 0;
      }
      section {
        text-align: left;
      }
      figure {
        &:nth-of-type(1n + 0) {
          float: none;
          margin: var(--spacing);
        }
        li {
          margin: 0.125em 0;
          &:before {
            content: none;
          }
        }
      }
    }

    figure {
      --dur: 0.5s;
      float: none;
      display: block;
      width: 100%;
      max-width: 100%;
      margin: var(--spacing) auto;

      &.contained {
        overflow: hidden;
        border: 1pt solid var(--cw75);
        border-radius: var(--rounding);
        background: var(--cw75);
        box-shadow: 2pt 2pt 1pt transparent, -2pt -2pt 2pt transparent,
          1pt 1pt 0pt transparent inset, -1pt -1pt 0pt transparent inset,
          0 0 0 1pt var(--shade) inset;
        &:hover,
        &:focus,
        &:active {
          box-shadow: 2pt 2pt 1pt var(--shade), -2pt -2pt 2pt var(--gloss),
            1pt 1pt 0pt var(--gloss) inset, -1pt -1pt 0pt var(--shade) inset,
            0 0 0 1pt transparent inset;
        }
        &.animate-in {
          img {
            transform: none;
          }
        }
      }

      &.invertible {
        @media (prefers-color-scheme: light) {
          img {
            filter: none;
          }
        }
        @media (prefers-color-scheme: dark) {
          img {
            filter: invert(1) hue-rotate(0.5turn);
          }
        }
      }

      img {
        display: block;
        max-width: 100%;
        margin: auto;
      }
      &.animate-in {
        @media only screen {
          img {
            transform: scale(0);
          }
        }
      }

      ul {
        margin: 0;
        padding: 0;
        list-style-type: none;
      }
    }

    @media (min-width: $bp2) {
      figure {
        float: left;
        transform-origin: left;
        --fw: calc(50% - 1.5 * var(--spacing)); // Figure width
        max-width: var(--fw);
        margin: 0 var(--spacing) var(--spacing) 0;

        &:nth-of-type(even):not(.solo) {
          float: right;
          transform-origin: right;
          margin-left: var(--spacing);
          margin-right: 0;
        }
        &.solo {
          float: none;
          transform-origin: center;
          max-width: 100%;
        }
      }
      &:nth-of-type(even) figure:not(.solo) {
        float: right;
        transform-origin: right;
        margin-left: var(--spacing);
        margin-right: 0;

        &:nth-of-type(even):not(.solo) {
          float: left;
          transform-origin: left;
          margin-right: var(--spacing);
          margin-left: 0;
        }
      }
    }
    @media (min-width: $bp3) {
      figure {
        &,
        &.contained {
          background: radial-gradient(farthest-corner, var(--cbi), var(--cbo));
          animation-name: mainLighting;
          animation-duration: 5s;
          border: none;
        }
        transition-duration: calc(4 * var(--dur)), 0.5s;
        transition-property: transform, all;
        img {
          transition-duration: 0s;
          transition-property: transform;
          max-height: calc(100vh - 10rem);
          object-fit: contain;
        }
        padding: var(--spacing);
        border-radius: calc(2 * var(--spacing));
        box-shadow: 2pt 2pt 2pt transparent, -2pt -2pt 2pt transparent,
          1pt 1pt 0pt transparent inset, -1pt -1pt 0pt transparent inset,
          0 0 0 1pt var(--shade) inset;
        &:hover,
        &:focus,
        &:active {
          box-shadow: 2pt 2pt 2pt var(--shade), -2pt -2pt 2pt var(--gloss),
            1pt 1pt 0pt var(--gloss) inset, -1pt -1pt 0pt var(--shade) inset,
            0 0 0 1pt transparent inset;
        }

        // Fancy margin size
        --fms: calc(-1 * min(calc((100vw - 100%) / 2), 100%) + var(--spacing));
        // Fancy max-width
        --fmw: min(
          calc(100% - 5 * var(--spacing)),
          calc(var(--fw) - 0.5 * var(--fms))
        );

        margin-left: var(--fms);
        transform-origin: right;
        &:nth-of-type(even):not(.solo) {
          margin-left: var(--spacing);
          margin-right: var(--fms);
          transform-origin: left;
        }
        max-width: var(--fmw);
        &.solo {
          width: 100vw;
          max-width: min(300%, 100% - 2 * var(--fms) - 2 * var(--spacing));
          margin-right: var(--fms);
          transform-origin: center;
          transition-duration: calc(2 * var(--dur));
        }
      }
      &:nth-of-type(even) figure:not(.solo) {
        margin-left: var(--spacing);
        margin-right: var(--fms);
        transform-origin: left;

        &:nth-of-type(even):not(.solo) {
          margin-right: var(--spacing);
          margin-left: var(--fms);
          transform-origin: right;
        }
      }
    }

    @media only print {
      padding-left: 0;
      padding-right: 0;
    }

    .gallery {
      display: flex;
      flex-flow: row wrap;
      justify-content: space-between;
      align-items: stretch;
      max-width: 100%;
      margin: 0;
      padding: 0;
      gap: var(--spacing);
      border: 0;
      outline: 0 solid black;
      border-radius: 0;
      background: none;
      animation-name: mainLighting;
      animation-duration: 5s;
      text-align: center;
      box-shadow: none;
      &:hover,
      &:active,
      &:focus {
        background: none;
        box-shadow: none;
      }

      --gin: 3;
      --gim: calc(
        (
            80ch - (var(--gin) - 1 + 2 * 5) * var(--spacing) - var(--gin) * 2 *
              1pt - 1pt
          ) / var(--gin)
      ); // Gallery item measurement
      // The extra 1pt is a fudge for a problem of unknown origin

      > * {
        flex: 1 0 var(--gim);
        box-sizing: border-box;

        @media (min-width: 34rem) {
          &:nth-of-type(2n + 1) {
            &,
            & * {
              --delB: calc(1s / 2);
            }
          }
          &:nth-of-type(2n + 0) {
            &,
            & * {
              --delB: calc(2s / 2);
            }
          }
        }
        @media (min-width: 53rem) {
          &:nth-of-type(3n + 1) {
            &,
            & * {
              --delB: calc(1s / 3);
            }
          }
          &:nth-of-type(3n + 2) {
            &,
            & * {
              --delB: calc(2s / 3);
            }
          }
          &:nth-of-type(3n + 0) {
            &,
            & * {
              --delB: calc(3s / 3);
            }
          }
        }
      }

      &.expansive {
        @media (min-width: $bp3) {
          width: 100vw;
          max-width: calc(
            100vw - (2 * var(--spacingAbs)) - (2 * var(--spacing))
          );
          margin-left: calc(50% - 50vw + var(--spacingAbs) + var(--spacing));
          padding: var(--spacing);
          justify-content: center;
          box-sizing: border-box;
          border-radius: calc(2 * var(--rounding));
          background: radial-gradient(farthest-corner, var(--cbi), var(--cbo));
          box-shadow: 2pt 2pt 2pt transparent, -2pt -2pt 2pt transparent,
            1pt 1pt 0pt transparent inset, -1pt -1pt 0pt transparent inset,
            0 0 0 1pt var(--shade) inset;
          &:hover,
          &:focus,
          &:active {
            box-shadow: 2pt 2pt 2pt var(--shade), -2pt -2pt 2pt var(--gloss),
              1pt 1pt 0pt var(--gloss) inset, -1pt -1pt 0pt var(--shade) inset,
              0 0 0 1pt transparent inset;
          }

          > * {
            &:nth-of-type(4n + 1) {
              &,
              & * {
                --delB: calc(1s / 4);
              }
            }
            &:nth-of-type(4n + 2) {
              &,
              & * {
                --delB: calc(2s / 4);
              }
            }
            &:nth-of-type(4n + 3) {
              &,
              & * {
                --delB: calc(3s / 4);
              }
            }
            &:nth-of-type(4n + 0) {
              &,
              & * {
                --delB: calc(4s / 4);
              }
            }
            @media (min-width: 91rem) {
              &:nth-of-type(5n + 1) {
                &,
                & * {
                  --delB: calc(1s / 5);
                }
              }
              &:nth-of-type(5n + 2) {
                &,
                & * {
                  --delB: calc(2s / 5);
                }
              }
              &:nth-of-type(5n + 3) {
                &,
                & * {
                  --delB: calc(3s / 5);
                }
              }
              &:nth-of-type(5n + 4) {
                &,
                & * {
                  --delB: calc(4s / 5);
                }
              }
              &:nth-of-type(5n + 0) {
                &,
                & * {
                  --delB: calc(5s / 5);
                }
              }
            }
            @media (min-width: 106rem) {
              &:nth-of-type(6n + 1) {
                &,
                & * {
                  --delB: calc(1s / 6);
                }
              }
              &:nth-of-type(6n + 2) {
                &,
                & * {
                  --delB: calc(2s / 6);
                }
              }
              &:nth-of-type(6n + 3) {
                &,
                & * {
                  --delB: calc(3s / 6);
                }
              }
              &:nth-of-type(6n + 4) {
                &,
                & * {
                  --delB: calc(4s / 6);
                }
              }
              &:nth-of-type(6n + 5) {
                &,
                & * {
                  --delB: calc(5s / 6);
                }
              }
              &:nth-of-type(6n + 0) {
                &,
                & * {
                  --delB: calc(6s / 6);
                }
              }
            }
            @media (min-width: 120rem) {
              &:nth-of-type(7n + 1) {
                &,
                & * {
                  --delB: calc(1s / 7);
                }
              }
              &:nth-of-type(7n + 2) {
                &,
                & * {
                  --delB: calc(2s / 7);
                }
              }
              &:nth-of-type(7n + 3) {
                &,
                & * {
                  --delB: calc(3s / 7);
                }
              }
              &:nth-of-type(7n + 4) {
                &,
                & * {
                  --delB: calc(4s / 7);
                }
              }
              &:nth-of-type(7n + 5) {
                &,
                & * {
                  --delB: calc(5s / 7);
                }
              }
              &:nth-of-type(7n + 6) {
                &,
                & * {
                  --delB: calc(6s / 7);
                }
              }
              &:nth-of-type(7n + 0) {
                &,
                & * {
                  --delB: calc(7s / 7);
                }
              }
            }
            @media (min-width: 137rem) {
              &:nth-of-type(8n + 1) {
                &,
                & * {
                  --delB: calc(1s / 8);
                }
              }
              &:nth-of-type(8n + 2) {
                &,
                & * {
                  --delB: calc(2s / 8);
                }
              }
              &:nth-of-type(8n + 3) {
                &,
                & * {
                  --delB: calc(3s / 8);
                }
              }
              &:nth-of-type(8n + 4) {
                &,
                & * {
                  --delB: calc(4s / 8);
                }
              }
              &:nth-of-type(8n + 5) {
                &,
                & * {
                  --delB: calc(5s / 8);
                }
              }
              &:nth-of-type(8n + 6) {
                &,
                & * {
                  --delB: calc(6s / 8);
                }
              }
              &:nth-of-type(8n + 7) {
                &,
                & * {
                  --delB: calc(7s / 8);
                }
              }
              &:nth-of-type(8n + 0) {
                &,
                & * {
                  --delB: calc(8s / 8);
                }
              }
            }
            @media (min-width: 152rem) {
              &:nth-of-type(9n + 1) {
                &,
                & * {
                  --delB: calc(1s / 9);
                }
              }
              &:nth-of-type(9n + 2) {
                &,
                & * {
                  --delB: calc(2s / 9);
                }
              }
              &:nth-of-type(9n + 3) {
                &,
                & * {
                  --delB: calc(3s / 9);
                }
              }
              &:nth-of-type(9n + 4) {
                &,
                & * {
                  --delB: calc(4s / 9);
                }
              }
              &:nth-of-type(9n + 5) {
                &,
                & * {
                  --delB: calc(5s / 9);
                }
              }
              &:nth-of-type(9n + 6) {
                &,
                & * {
                  --delB: calc(6s / 9);
                }
              }
              &:nth-of-type(9n + 7) {
                &,
                & * {
                  --delB: calc(7s / 9);
                }
              }
              &:nth-of-type(9n + 8) {
                &,
                & * {
                  --delB: calc(8s / 9);
                }
              }
              &:nth-of-type(9n + 0) {
                &,
                & * {
                  --delB: calc(9s / 9);
                }
              }
            }
          }
        }
      }

      .item {
        overflow: hidden;
        position: relative;
        display: flex;
        gap: var(--spacing);
        flex-flow: column nowrap;
        justify-content: space-between;
        max-width: 80ch;
        margin: 1pt;
        padding: var(--spacing);
        border: 0pt solid var(--cw75);
        border-radius: var(--rounding);
        background-color: white;
        --ct: hsl(from black h s l / 75%);
        color: var(--ct);
        text-align: center;
        list-style: none;
        vertical-align: top;
        box-shadow: 2pt 2pt 1pt transparent, -2pt -2pt 2pt transparent,
          1pt 1pt 0pt transparent inset, -1pt -1pt 0pt transparent inset,
          0 0 0 1pt var(--gloss) inset, 0 0 0 1pt var(--shade);
        &:hover,
        &:focus,
        &:active {
          box-shadow: 2pt 2pt 1pt var(--shade), -2pt -2pt 2pt var(--gloss),
            1pt 1pt 0pt var(--gloss) inset, -1pt -1pt 0pt var(--shade) inset,
            0 0 0 1pt transparent inset, 0 0 0 1pt transparent;
        }

        &:before {
          display: none;
        }

        h1,
        h2,
        h3,
        h4,
        h5,
        h6 {
          &::before,
          &::after {
            display: none;
          }
        }

        img {
          display: inline-block;
          max-width: calc(var(--gim) - 2 * var(--spacing));
          max-height: calc(var(--gim) - 2 * var(--spacing));
          margin: auto;
          background: white;
          transition: border-radius var(--dur) calc(var(--delA) + var(--delB)),
            transform var(--dur) calc(var(--delA) + var(--delB));
        }
        &.animate-in {
          @media only screen {
            img {
              transform: scale(0);
              border-radius: 100%;
              transition-delay: 0s;
            }
          }
        }

        p {
          margin: 0 auto;
          padding: 0;
          border: 0;
          font-size: 1rem;
          text: {
            indent: 0;
            align: center;
          }
          line-height: 1.5;
          color: black;
          &.title,
          &.more {
            font: {
              family: "Nunito", sans-serif;
              size: 1em;
            }
          }
          a {
            position: relative;
            z-index: 1;
            text-decoration: underline;
            color: var(--cm25);
            @media (prefers-color-scheme: dark) {
              color: var(--cm75);
            }
          }
        }
        a {
          margin: auto 0;
          color: var(--ct);
          text-decoration: none;
          &,
          &:hover,
          &:focus,
          &:active {
            text-shadow: none;
          }
          &.cover {
            position: absolute;
            inset: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            &,
            &:hover,
            &:focus,
            &:active {
              color: transparent;
            }
          }
        }
      }
    }
  }
}

/* Modal image display */
.display {
  position: fixed;
  z-index: 3;
  inset: 0;
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  margin: 0;
  padding: 0;
  background: radial-gradient(black, var(--mbo));
  color: grey;
  font-size: calc(1rem + 1vmin);
  text-align: center;
  float: none;
  gap: var(--spacing);
  &.modal {
    opacity: 0;
  }

  &,
  * {
    transition-duration: 0s;
  }

  img {
    position: absolute;
    top: 50%;
    left: 50%;
    max-width: calc(100vw - 2 * 1em);
    max-height: calc(100vh - 2 * 6em);
    box-sizing: border-box;
    object-fit: scale-down;
    transform: translate(-50%, -50%);
    border: 1vh solid white;
    box-shadow: 0 0 3em 3em black;
    margin: 0 auto;
    background: white;
  }

  h2,
  nav {
    display: flex;
    align-items: center;
    max-height: 1em;
    position: absolute;
    z-index: 4;
    top: 0;
    width: auto;
    padding: 1em;
    color: grey;
    font-size: 2em;
    line-height: 1em;
    gap: 0.5ch;
  }

  nav {
    top: auto;
    bottom: 0;
    background: none;
  }

  a {
    display: inline-block;
    width: 1em;
    margin: 0 1em;
    padding: 0;
    border-radius: var(--rounding);
    background: none;
    color: grey;
    font-weight: bold;
    text-decoration: none;
    text-shadow: 0 0 0.125em transparent;
    &:hover,
    &:focus,
    &:active {
      text-shadow: 0 0 0.125em black;
    }
    user-select: none;
    cursor: pointer;

    &:hover,
    &:focus {
      color: white;
    }
  }
}
